#pragma checksum "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "120fbb885406d45bfc953f700e4e8f295c5aa748"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Currency_ConvertAsync), @"mvc.1.0.view", @"/Views/Currency/ConvertAsync.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Currency/ConvertAsync.cshtml", typeof(AspNetCore.Views_Currency_ConvertAsync))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
#line 1 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
using Microsoft.AspNetCore.Mvc.Rendering;

#line default
#line hidden
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\_ViewImports.cshtml"
using WebApplicationPublicAPI;

#line default
#line hidden
#line 2 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\_ViewImports.cshtml"
using WebApplicationPublicAPI.Models;

#line default
#line hidden
#line 2 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"120fbb885406d45bfc953f700e4e8f295c5aa748", @"/Views/Currency/ConvertAsync.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dd578b3fe75660adbeea76776fd5b9a322353f17", @"/Views/_ViewImports.cshtml")]
    public class Views_Currency_ConvertAsync : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(67, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 4 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
  
    ViewData["Title"] = "Converter";
    List<string> currencyList = ViewBag.listofcurrencies;

#line default
#line hidden
            BeginContext(173, 33, true);
            WriteLiteral("\r\n<h2>Currency Converter</h2>\r\n\r\n");
            EndContext();
#line 11 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
 using (Html.BeginForm("ConvertAsync", "Currency", FormMethod.Post))
{

#line default
#line hidden
            BeginContext(279, 104, true);
            WriteLiteral("    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th>\r\n                    ");
            EndContext();
            BeginContext(384, 49, false);
#line 17 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
               Write(Html.Label("From Currency ------ Initial Amount"));

#line default
#line hidden
            EndContext();
            BeginContext(433, 69, true);
            WriteLiteral("\r\n\r\n                </th>\r\n                <th>\r\n                    ");
            EndContext();
            BeginContext(503, 25, false);
#line 21 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
               Write(Html.Label("To Currency"));

#line default
#line hidden
            EndContext();
            BeginContext(528, 139, true);
            WriteLiteral("\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>\r\n                    ");
            EndContext();
            BeginContext(668, 82, false);
#line 28 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
               Write(Html.DropDownList("fromCurrency", new SelectList(currencyList), "Select currency"));

#line default
#line hidden
            EndContext();
            BeginContext(750, 155, true);
            WriteLiteral("\r\n                    <input type=\"number\" , name=\"initialAmount\" value=\"\" required />\r\n\r\n                </td>\r\n                <td>\r\n                    ");
            EndContext();
            BeginContext(906, 80, false);
#line 33 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
               Write(Html.DropDownList("toCurrency", new SelectList(currencyList), "Select currency"));

#line default
#line hidden
            EndContext();
            BeginContext(986, 149, true);
            WriteLiteral("\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <input type=\"submit\" value=\"Convert\" class=\"btn btn-primary\" /><br>\r\n");
            EndContext();
#line 39 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
}

#line default
#line hidden
            BeginContext(1138, 28, true);
            WriteLiteral("<p><span style=\"color: red\">");
            EndContext();
            BeginContext(1167, 13, false);
#line 40 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
                       Write(ViewBag.error);

#line default
#line hidden
            EndContext();
            BeginContext(1180, 13, true);
            WriteLiteral("</span></p>\r\n");
            EndContext();
            BeginContext(1194, 27, false);
#line 41 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
Write(Html.Label("Final Amount:"));

#line default
#line hidden
            EndContext();
            BeginContext(1221, 43, true);
            WriteLiteral("\r\n<input type=\"number\" , name=\"finalAmount\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 1264, "\"", 1292, 1);
#line 42 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
WriteAttributeValue("", 1272, ViewBag.finalAmount, 1272, 20, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1293, 12, true);
            WriteLiteral(" readonly>\r\n");
            EndContext();
            BeginContext(1306, 31, false);
#line 43 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
Write(Html.Label("Elapsed Time(ms):"));

#line default
#line hidden
            EndContext();
            BeginContext(1337, 30, true);
            WriteLiteral("\r\n<a><span style=\"color: red\">");
            EndContext();
            BeginContext(1368, 19, false);
#line 44 "D:\App\TextFileDemoApp\WebApplicationPublicAPI\Views\Currency\ConvertAsync.cshtml"
                       Write(ViewBag.elapsedTime);

#line default
#line hidden
            EndContext();
            BeginContext(1387, 23, true);
            WriteLiteral("</span></a>\r\n\r\n\r\n\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
